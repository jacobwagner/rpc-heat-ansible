---
cidr_networks:
  management: 172.29.236.0/22
  tunnel: 172.29.240.0/22
  storage: 172.29.244.0/22

used_ips:
  - 172.29.236.1,172.29.236.50
  - 172.29.240.1,172.29.240.50
  - 172.29.244.1,172.29.244.50

global_overrides:
  internal_lb_vip_address: 172.29.236.{{ hostvars[ groups.infra|first ].node_id }}
  external_lb_vip_address: {{ hostvars[ groups.infra|first ].ansible_eth0.ipv4.address }}
  tunnel_bridge: "br-vxlan"
  management_bridge: "br-mgmt"
  provider_networks:
    - network:
        group_binds:
          - all_containers
          - hosts
        container_bridge: "br-mgmt"
        container_type: "veth"
        container_interface: "eth1"
        container_mtu: "1450"
        ip_from_q: "management"
        type: "raw"
        is_container_address: true
        is_ssh_address: true
    - network:
        group_binds:
          - glance_api
          - cinder_api
          - cinder_volume
          - nova_compute
{% if groups.object is defined %}
          - swift_proxy
{% endif %}
{% if groups.ceph is defined %}
          - mons
{% endif %}
        container_bridge: "br-storage"
        container_type: "veth"
        container_interface: "eth2"
        container_mtu: "1450"
        ip_from_q: "storage"
        type: "raw"
    - network:
        group_binds:
          - neutron_linuxbridge_agent
        container_bridge: "br-vxlan"
        container_type: "veth"
        container_interface: "eth10"
        container_mtu: "1450"
        ip_from_q: "tunnel"
        type: "vxlan"
        range: "1:1000"
        net_name: "vxlan"
    - network:
        group_binds:
          - neutron_linuxbridge_agent
        container_bridge: "br-vlan"
        container_type: "veth"
        container_interface: "eth11"
        container_mtu: "1450"
        type: "vlan"
        range: "101:200"
        net_name: "vlan"
    - network:
        group_binds:
          - neutron_linuxbridge_agent
        container_bridge: "br-vlan"
        container_type: "veth"
        container_interface: "eth12"
        container_mtu: "1450"
        host_bind_override: "eth12"
        type: "flat"
        net_name: "flat"

{% if groups.infra|length > 0 %}
shared-infra_hosts:
{% for host in groups.infra %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

{% if groups.infra|length > 0 %}
os-infra_hosts:
{% for host in groups.infra %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

{% if groups.infra|length > 0 %}
storage-infra_hosts:
{% for host in groups.infra %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

{% if groups.infra|length > 0 %}
repo-infra_hosts:
{% for host in groups.infra %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

{% if groups.infra|length > 0 %}
identity_hosts:
{% for host in groups.infra %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

{% if groups.infra|length > 0 %}
network_hosts:
{% for host in groups.infra %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

{% if groups.compute|length > 0 %}
compute_hosts:
{% for host in groups.compute %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

{% if groups.block|length > 0 %}
storage_hosts:
{% for host in groups.block %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
    container_vars:
      cinder_backends:
        limit_container_types: cinder_volume
        lvm:
          volume_group: cinder-volumes
          volume_driver: cinder.volume.drivers.lvm.LVMVolumeDriver
          volume_backend_name: LVM_iSCSI
{% endfor %}
{% endif %}

{% if groups.logger|length > 0 %}
log_hosts:
{% for host in groups.logger %}
  {{ heat_stack_prefix|string }}-{{ host }}:
    ip: {{ hostvars[ host ].ansible_eth0.ipv4.address }}
{% endfor %}
{% endif %}

haproxy_hosts:
  {{ heat_stack_prefix|string }}-{{ groups.infra|first }}:
    ip: {{ hostvars[ groups.infra|first ].ansible_eth0.ipv4.address }}
